tags:  
  clusterScopeMode: false
  namespaceMode: false
  crdMode: false
  agentProxy: false
global:
  clusterScope:
    enabled: true
  autoUpgrade:
    enabled: false
  infraId: ""
  accessKey: ""
  workflowInstanceId: ""
  accountId: ""
  serverAddress: "https://app.harness.io/gratis/chaos/kserver/api"

subscriber:
  image:
    registry: docker.io
    repository: harness/chaos-subscriber
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.41.0"
    imagePullSecrets: []

  upgrader:
    image:
      registry: docker.io
      repository: harness/k8s-chaos-infrastructure-upgrader
      pullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      tag: "1.41.0"
      imagePullSecrets: []
  secrets:
    env:
      infraId:
        secretName: subscriber-secret
        key: INFRA_ID
      accessKey:
        secretName: subscriber-secret
        key: ACCESS_KEY
      customTlsCert:
        secretName: subscriber-secret
        key: CUSTOM_TLS_CERT 

  customTlsCert: ""
  version: 1.41.0

  skipSslVerify: "true"

  connectionType: HTTPS

  isInfraConfirmed: "false"

  isSecretEnabled: "true"

  serviceAccount: 
    name: hce

  securityContext:
    runAsUser: 2000
    runAsGroup: 2000
    allowPrivilegeEscalation: false

  resources:
    requests:
      memory: "300Mi"
      cpu: "125m"
      ephemeral-storage: "500Mi"
    limits:
      memory: "500Mi"
      cpu: "225m"
      ephemeral-storage: "1Gi"
  nodeSelector: {}
  affinity: {}
  tolerations: []

workflow-controller:
  image:
    registry: docker.io
    repository: harness/chaos-workflow-controller
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v3.4.16"
    imagePullSecrets: []

  argoExec:
    image:
      registry: docker.io
      repository: harness/chaos-argoexec
      pullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      tag: "v3.4.16"

  serviceAccount: 
    name: hce

  securityContext:
    runAsUser: 2000
    runAsGroup: 2000
    allowPrivilegeEscalation: false

  resources:
    requests:
      memory: "300Mi"
      cpu: "125m"
      ephemeral-storage: "500Mi"
    limits:
      memory: "500Mi"
      cpu: "225m"
      ephemeral-storage: "1Gi"
  nodeSelector: {}
  affinity: {}
  tolerations: []
chaos-operator:
  image:
    registry: docker.io
    repository: harness/chaos-operator
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.41.0"
    imagePullSecrets: []

  chaosRunner:
    image:
      registry: docker.io
      repository: harness/chaos-runner
      pullPolicy: Always
      # Overrides the image tag whose default is the chart appVersion.
      tag: "1.41.0"

  serviceAccount: 
    name: hce

  securityContext:
    runAsUser: 2000
    runAsGroup: 2000
    allowPrivilegeEscalation: false

  resources:
    requests:
      memory: "300Mi"
      cpu: "125m"
      ephemeral-storage: "500Mi"
    limits:
      memory: "500Mi"
      cpu: "225m"
      ephemeral-storage: "1Gi"
  nodeSelector: {}
  affinity: {}
  tolerations: []
chaos-exporter:
  image:
    registry: docker.io
    repository: harness/chaos-exporter
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.41.0"
    imagePullSecrets: []

  serviceAccount: 
    name: hce

  securityContext:
    runAsUser: 2000
    runAsGroup: 2000
    allowPrivilegeEscalation: false

  resources:
    requests:
      memory: "300Mi"
      cpu: "125m"
      ephemeral-storage: "500Mi"
    limits:
      memory: "500Mi"
      cpu: "225m"
      ephemeral-storage: "1Gi"
  nodeSelector: {}
  affinity: {}
  tolerations: []

agent-proxy:
  replicaCount: 1

  image:
    repository: harness/chaos-agent-proxy
    tag: main-latest
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}
  podLabels: {}

  podSecurityContext:
    fsGroup: 2000

  securityContext:
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000

  service:
    type: ClusterIP


  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  # Additional volumes on the output Deployment definition.
  volumes: []
  #- name: client-certificate
  #  secret:
  #    secretName: client-certificate

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  #- mountPath: /etc/mtls
  #  name: client-certificate
  #  readOnly: true

  env: []
  # - name: PROXY_CLIENT_CERT_PATH
  #  value: /etc/mtls/client.crt
  #- name: PROXY_CLIENT_KEY_PATH
  #  value: /etc/mtls/client.key

nodeSelector: {}

tolerations: []

affinity: {}
